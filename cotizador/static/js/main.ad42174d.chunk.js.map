{"version":3,"sources":["components/Header.js","Helper.js","components/Form.jsx","components/Summary.js","components/Result.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["HeaderContainer","styled","header","HeaderText","h1","Header","title","firstUpperCase","text","charAt","toUpperCase","slice","Field","div","Label","label","Select","select","InputRadio","input","Button","button","Error","Form","setSummary","setLoading","useState","brand","year","plan","data","setData","error","setError","getInfo","e","target","name","value","onSubmit","preventDefault","trim","result","difference","Date","getFullYear","getYearsDifference","increase","calcBrand","increasePlan","getPlan","parseInt","toFixed","setTimeout","quotation","Number","onChange","type","checked","SummaryContainer","Summary","Message","p","QuotationResult","QuotationText","Result","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","Spinner","Container","FormContainer","App","summary","loading","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ad42174d.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst HeaderContainer = styled.header`\r\n    background-color: rgb(0,0,0,0.3);\r\n    backdrop-filter: blur(80%);\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #FFFF \r\n`;\r\n\r\nconst HeaderText = styled.h1`\r\n    color: white;\r\n    font-size: 2rem;\r\n    margin: 10px;\r\n    font-family: \"Arial 27px\";\r\n    text-align: center;\r\n`;\r\n\r\nconst Header = ({title} ) => {\r\n    return ( \r\n        <HeaderContainer>\r\n        <HeaderText>\r\n            {title}\r\n        </HeaderText>\r\n        </HeaderContainer>\r\n     );\r\n}\r\n \r\nexport default Header;","export function getYearsDifference(year) {\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\nexport function calcBrand(brand) {\r\n    let increase;\r\n\r\n    switch (brand) {\r\n        case \"european\":\r\n            increase = 1.30;\r\n            break;\r\n        case \"american\":\r\n            increase = 1.15;\r\n            break;\r\n        case \"asian\":\r\n            increase = 1.05;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return increase;\r\n}\r\n\r\nexport function getPlan(plan) {\r\n    return (plan === \"Basic\") ? 1.20 : 1.50;\r\n}\r\n\r\n//Show the first letter in uppercase\r\nexport function firstUpperCase(text ){\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}","import React, { useState } from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport { getYearsDifference, calcBrand, getPlan } from \"../Helper\";\r\n\r\nconst Field = styled.div`\r\ndisplay: flex;\r\nmargin-bottom: 1rem;\r\nalign-items: center;\r\ncolor: #fff;\r\n`;\r\n\r\nconst Label = styled.label`\r\ncolor: #ffff;\r\nflex: 0 0 100px;\r\n`;\r\n\r\nconst Select = styled.select`\r\ndisplay: block;\r\nwidth: 100%;\r\npadding: 1rem;\r\n-webkit-appearance: none; \r\n`;\r\n\r\nconst InputRadio = styled.input`\r\nmargin: 0 1rem;\r\n@media (max-width: 400px) {\r\n    margin: 0 0.2rem;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\nbackground-color: #00838F;\r\nfont-size: 16px;\r\nwidth: 100%;\r\npadding: 1rem;\r\ncolor: #fff;\r\ntext-transform: uppercase;\r\nfont-weight: bold;\r\nborder: none;\r\ntransition: background-color .3s ease;\r\nmargin-top: 2rem;\r\n&:hover {\r\n    cursor: pointer;\r\n    background-color: #26C6DA;\r\n\r\n}\r\n`;\r\nconst Error = styled.div` \r\n    background-color: red;\r\n    color: white;\r\n    padding: 1rem;\r\n    margin-bottom:2rem;\r\n    width: 95%;\r\n    text-align: center;\r\n    `;\r\n\r\nconst Form = ({ setSummary, setLoading }) => {\r\n    const [data, setData] = useState({\r\n        brand: ' ',\r\n        year: ' ',\r\n        plan: ''\r\n    });\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    //Extraer valores del State datos\r\n    const { brand, year, plan } = data;\r\n\r\n    const getInfo = e => {\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    //Submit del formulario\r\n    const quoteInsurance = e => {\r\n        e.preventDefault();\r\n\r\n        if (brand.trim() === '' || year.trim() === '' || plan.trim() === '') {\r\n            setError(true);\r\n            return;\r\n        }\r\n        setError(false);\r\n\r\n        //A base of 2000\r\n        let result = 2000;\r\n\r\n        //get the difference of years\r\n        let difference = getYearsDifference(year);\r\n        //console.log(difference);\r\n        //For each year we have to subtract 3%\r\n        result -= ((difference * 3) * result) / 100;\r\n        // American 15%\r\n        //Asian 5%\r\n        //European 30%\r\n        result = calcBrand(brand) * result;\r\n        //console.log(result);\r\n        //Basic increases 20%\r\n        //Complete increases 50%\r\n        const increasePlan = getPlan(plan);\r\n        result = parseInt(increasePlan * result).toFixed(2);\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            setSummary({\r\n                quotation: Number(result),\r\n                data\r\n            });\r\n        }, 2000);\r\n    }\r\n\r\n    return (\r\n\r\n        <form\r\n            onSubmit={quoteInsurance}\r\n        >\r\n            {error ? <Error>Todos los campos son obligatorios</Error> : null}\r\n            <Field>\r\n                <Label>Marca</Label>\r\n                <Select\r\n                    name=\"brand\"\r\n                    value={brand}\r\n                    onChange={getInfo}\r\n                >\r\n                    <option value=\"\">--- Seleccione ----</option>\r\n                    <option value=\"american\">Americano</option>\r\n                    <option value=\"european\">Europeo</option>\r\n                    <option value=\"asian\">Asiatico</option>\r\n                </Select>\r\n            </Field>\r\n            <Field>\r\n                <Label>Año</Label>\r\n                <Select\r\n                    name=\"year\"\r\n                    value={year}\r\n                    onChange={getInfo}\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2017\">2017</option>\r\n                    <option value=\"2016\">2016</option>\r\n                    <option value=\"2015\">2015</option>\r\n                    <option value=\"2014\">2014</option>\r\n                    <option value=\"2013\">2013</option>\r\n                    <option value=\"2012\">2012</option>\r\n                </Select>\r\n            </Field>\r\n            <Field>\r\n                <Label>Plan</Label>\r\n                <InputRadio\r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"Basic\"\r\n                    checked={plan === \"Basic\"}\r\n                    onChange={getInfo}\r\n                />Basico\r\n                <InputRadio\r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"Complete\"\r\n                    checked={plan === \"Complete\"}\r\n                    onChange={getInfo}\r\n                />Completo\r\n            </Field>\r\n            <Button\r\n                type=\"submit\"\r\n            >Cotizar </Button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport {firstUpperCase} from \"../Helper\";\r\n\r\nconst SummaryContainer = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: rgb(0,0,0,0.3);\r\n    backdrop-filter: blur(80%);\r\n    color: #fff;\r\n    margin-top: 1rem; \r\n `  ;\r\n\r\nconst Summary = ({data}) => {\r\n    \r\n    //Extract from data\r\n    const {brand, year, plan} = data; \r\n    if(brand === \"\" || year === \"\" || plan===\"\") return null;\r\n    return (\r\n        <SummaryContainer>\r\n            <h2>Resumen de cotización</h2>\r\n            <ul>\r\n                <li> Marca: {firstUpperCase(brand)} </li>\r\n                <li> Año: {firstUpperCase(year)} </li>\r\n                <li> Plan: {firstUpperCase(plan)}</li>\r\n\r\n            </ul>\r\n        </SummaryContainer>\r\n    );\r\n}\r\n\r\nexport default Summary;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst Message = styled.p`\r\nbackground-color: rgb(0,0,0,0.3);\r\nbackdrop-filter: blur(80%);\r\nmargin-top: 2rem;\r\npadding: 1rem;\r\ncolor: white;\r\ntext-align: center;\r\n`;\r\n\r\nconst QuotationResult = styled.div`\r\ntext-align: center;\r\npadding: .5rem;\r\nborder: 1px solid #26C6DA;\r\nbackground-color: rgb(0,0,0,0.3);\r\nbackdrop-filter: blur(80%);\r\nmargin-top: 1rem;\r\nposition: relative;\r\n`\r\nconst QuotationText = styled.p`\r\ncolor: #fff;\r\npadding: 1rem;\r\ntext-transform: uppercase;\r\nfont-weight:bold;\r\nmargin: 0;\r\n`\r\nconst Result = ({ quotation }) => {\r\n\r\n  return (\r\n    (quotation === 0)\r\n      ? <Message>Elige marca, año y tipo de seguro</Message>\r\n      : (\r\n        <QuotationResult>\r\n          <TransitionGroup\r\n            component=\"span\"\r\n            className=\"resultado\"\r\n          >\r\n            <CSSTransition\r\n            classNames=\"resultado\"\r\n            key={quotation}\r\n            timeout={{enter: 500, exit: 500}}\r\n            >\r\n              <QuotationText>El total es: <span>${quotation}</span>  </QuotationText>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </QuotationResult>\r\n\r\n      )\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Result;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"sk-circle\">\r\n            <div className=\"sk-circle1 sk-child\"></div>\r\n            <div className=\"sk-circle2 sk-child\"></div>\r\n            <div className=\"sk-circle3 sk-child\"></div>\r\n            <div className=\"sk-circle4 sk-child\"></div>\r\n            <div className=\"sk-circle5 sk-child\"></div>\r\n            <div className=\"sk-circle6 sk-child\"></div>\r\n            <div className=\"sk-circle7 sk-child\"></div>\r\n            <div className=\"sk-circle8 sk-child\"></div>\r\n            <div className=\"sk-circle9 sk-child\"></div>\r\n            <div className=\"sk-circle10 sk-child\"></div>\r\n            <div className=\"sk-circle11 sk-child\"></div>\r\n            <div className=\"sk-circle12 sk-child\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React, { useState } from 'react';\nimport Header from \"./components/Header\";\nimport styled from \"@emotion/styled\";\nimport Form from \"./components/Form\";\nimport Summary from \"./components/Summary\";\nimport Result from './components/Result';\nimport Spinner from './components/Spinner';\n\nconst Container = styled.div`\nmax-width: 600px;\nmargin: 0 auto;\n`;\n\nconst FormContainer = styled.div`\nbackground-color: rgb(255,255,255,0.3);\nbackdrop-filter: blur(10%);\npadding: 3rem;\n`;\n\nfunction App() {\n  const [summary, setSummary] = useState({\n    quotation: 0,\n    data: {\n      brand: \"\",\n      year: \"\",\n      plan: \"\"\n    }\n\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const { data, quotation } = summary;\n  return (\n    <Container>\n      <Header\n        title=\"Cotizador de Seguros\"\n      />\n      <FormContainer>\n        <Form\n          setSummary={setSummary}\n          setLoading={setLoading}\n        />\n        { loading ? <Spinner /> \n        : null\n        \n        }\n        \n\n        <Summary\n          data={data}\n        />\n        {!loading ?\n         <Result\n          quotation={quotation}   \n        />  : null\n        }\n        \n\n\n\n      </FormContainer>\n    </Container>\n\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}